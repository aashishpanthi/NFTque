{"version":3,"file":"static/js/397.232ca424.chunk.js","mappings":"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","sources":["../node_modules/keccak256/dist/keccak256.js","../node_modules/keccak256/node_modules/bn.js/lib/bn.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = __importDefault(require(\"buffer\"));\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst Buffer = buffer_1.default.Buffer;\nfunction keccak256(value) {\n    value = toBuffer(value);\n    return (0, keccak_1.default)('keccak256').update(value).digest();\n}\nfunction toBuffer(value) {\n    if (!Buffer.isBuffer(value)) {\n        if (Array.isArray(value)) {\n            value = Buffer.from(value);\n        }\n        else if (typeof value === 'string') {\n            if (isHexString(value)) {\n                value = Buffer.from(padToEven(stripHexPrefix(value)), 'hex');\n            }\n            else {\n                value = Buffer.from(value);\n            }\n        }\n        else if (typeof value === 'number') {\n            value = intToBuffer(value);\n        }\n        else if (value === null || value === undefined) {\n            value = Buffer.allocUnsafe(0);\n        }\n        else if (bn_js_1.default.isBN(value)) {\n            value = value.toArrayLike(Buffer);\n        }\n        else if (value.toArray) {\n            // converts a BN to a Buffer\n            value = Buffer.from(value.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return value;\n}\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nfunction padToEven(value) {\n    if (typeof value !== 'string') {\n        throw new Error(`while padding to even, value must be string, is currently ${typeof value}, while padToEven.`);\n    }\n    if (value.length % 2) {\n        value = `0${value}`;\n    }\n    return value;\n}\nfunction stripHexPrefix(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    return isHexPrefixed(value) ? value.slice(2) : value;\n}\nfunction isHexPrefixed(value) {\n    if (typeof value !== 'string') {\n        throw new Error(\"value must be type 'string', is currently type \" + (typeof value) + ', while checking isHexPrefixed.');\n    }\n    return value.slice(0, 2) === '0x';\n}\nfunction intToBuffer(i) {\n    const hex = intToHex(i);\n    return Buffer.from(padToEven(hex.slice(2)), 'hex');\n}\nfunction intToHex(i) {\n    const hex = i.toString(16);\n    return `0x${hex}`;\n}\nif (typeof window !== 'undefined') {\n    window.keccak256 = keccak256;\n}\nmodule.exports = keccak256;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["__importDefault","this","mod","__esModule","bn_js_1","require","buffer_1","keccak_1","Buffer","default","keccak256","value","isBuffer","Array","isArray","from","length","match","isHexString","padToEven","Error","slice","isHexPrefixed","stripHexPrefix","i","hex","toString","intToHex","intToBuffer","undefined","allocUnsafe","isBN","toArrayLike","toArray","toBuffer","update","digest","window","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","negative","words","red","_init","wordSize","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","ceil","j","w","off","_strip","limbLen","limbPow","total","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}